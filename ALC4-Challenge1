<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <title>Mini App</title>
    <style>
      body {
        margin: 0;
        padding: 1em;
        background-color: white;
        }
      
      [data-cart-info],
      [data-credit-card] {
        transform: scale(0.78);
    	margin-left: -3.4em;
      }

      [data-cc-info] input:focus, 
      [data-cc-digits] input:focus {
        outline: none;
      }
      
      .mdc-card__primary-action,
      .mdc-card__primary-action:hover {
        cursor: auto;
        padding: 20px;
        min-height: inherit;
      }
      
      [data-credit-card] [data-card-type] {
        transition: width 1.5s;
        margin-left: calc(100% - 130px);
      }

     [data-credit-card] .is-visa {
        background: linear-gradient(135deg, #622774 0%, #c53364 100%);
      }

      [data-credit-card].is-mastercard {
        background: linear-gradient(135deg, #65799b 0%, #5e2563 100%);
      }

      .is-visa [data-card-type],
      .is-mastercard [data-card-type] {
        width: auto;
      }

      input.is-invalid,
      .is-invalid input {
        text-decoration: line-through;
      }

      ::placeholder {
        color: #fff;
      }
      
      .material-icons{
        display: inline-block;
        vertical-align: middle;
        font-size: 150px;
      }
      #span2{
        display: inline-block;
        vertical-align: middle;
      }
      
      div.mdc-card{
        width: 435px;
        min-height: 240px;
        border-radius: 10px;
        background-color: #5d6874
        
      }
      
      div.mdc-card--outlined{
        width: 435px;
        min-height: 240px;
        border-radius: 10px;
        background-color: #5d6874
        
      }
      div.data-cc-digits{
        margin-top: 2em;
        color: white;
        font-size: 2em;
        line-height:2em;
       	margin-right: 0.5em;
        border: none;
        background: none;
       
      }
      #divccd {
        margin-top: 2em;        
      }
      
      [data-cc-digits] input{
        color: white;
        font-size: 2em;
        line-height:2em;       	
        border: none;
        background: none;
        margin-right: 0.5em;
      }
      
      img[data-card-type]{
        display: block; 
        width: 120px; 
        height: 60px
      }
      
      [data-cc-info] {
        margin-top: 1em;
      }
      
      [data-cc-info] input{
        color: white;
        font-size: 1.2em;     	
        border: none;
        background: none;
      }
      
      [data-cc-info] input:nth-child(2){
        padding-right: 10px;
        float: right;
      }
      
      button[data-pay-btn] {
        position: fixed;
        width: 90%;
        border: 1px solid;
        bottom: 20px;
      }
      
      
    </style>
  </head>
  <body>
    
    <div data-cart-info = ''>
      	<header class='mdc-typography--headline4'>
      		<span id='span1' class='material-icons'> shopping_cart </span>
      		<span id='span2' data-bill = ''></span>
      	</header>
    </div>
      
    <div data-credit-card = '' class = 'mdc-card mdc-card--outlined'>
      
      	<div class='mdc-card__primary-action'>
      		<img data-card-type src='https://placehold.it/120x60.png?text=Card'/>
      			<div id=divccd data-cc-digits=''>
      	
      				<input type='text' size='4'	placeholder='----' required />
      				<input type='text' size='4'	placeholder='----' required />
      				<input type='text' size='4'	placeholder='----' required />
      				<input type='text' size='4'	placeholder='----' required />
      	
      			</div>
      
          		<div data-cc-info=''>
      			
                  	<input type='text' size='20'	placeholder='Name Surname' />
      				<input type='text' size='6'	placeholder='MM/YY'>
      			
          		</div>
      	</div>
	
    </div>
      
	<button class= 'mdc-button' data-pay-btn> Pay & Checkout Now </button>
      
                
    
    <script>
       
      const supportedCards = {
        visa, mastercard
      };
      
      const countries = [
        {
          code: "US",
          currency: "USD",
          country: 'United States'
        },
        {
          code: "NG",
          currency: "NGN",
          country: 'Nigeria'
        },
        {
          code: 'KE',
          currency: 'KES',
          country: 'Kenya'
        },
        {
          code: 'UG',
          currency: 'UGX',
          country: 'Uganda'
        },
        {
          code: 'RW',
          currency: 'RWF',
          country: 'Rwanda'
        },
        {
          code: 'TZ',
          currency: 'TZS',
          country: 'Tanzania'
        },
        {
          code: 'ZA',
          currency: 'ZAR',
          country: 'South Africa'
        },
        {
          code: 'CM',
          currency: 'XAF',
          country: 'Cameroon'
        },
        {
          code: 'GH',
          currency: 'GHS',
          country: 'Ghana'
        }
      ];
      
      const appState = {};
      
      const formatAsMoney = (amount,buyerCountry) =>{
        const country = countries.find(item => item.country == buyerCountry);
        
        if(country !== undefined){
          return amount.toLocaleString('en-'+country.code || 'US', {
            style: 'currency', currency: country.currency
          });
        };
        
        return amount.toLocaleString('en-'+country.code || 'US', {
          style:'currency', currency: countries[0].currency
        });
        
      };
      
      const flagIfInvalid = (field, isValid) =>{
        return (isValid) ? field.classList.remove('is-invalid'):
        field.classList.add('is-invalid');
      };
      
      const expiryDateFormatIsValid = (target) =>{
        return /^([0-9]{2})\/([0-9]{2}$)/.test(target.value);
      };
      
      
      
      
      const detectCardType = ({target}) =>{
        console.log('detectCardType' +target.value);
        const value = target.value.trim();
        const ccDC = document.querySelector('[data-credit-card]');
        const ccTC = document.querySelector('[data-card-type]');
        
        if(value.startsWith('4')){
          	ccDC.classList.remove('is-mastercard');
          	ccDC.classList.add('is-visa');
          	ccTC.src = supportedCards.visa;
          	return 'is-visa';
        }else if(value.startsWith('5')){
          	ccDC.classList.remove('is-visa');
          	ccDC.classList.add('is-mastercard');
          	ccTC.src = supportedCards.mastercard;
          	return 'is-mastercard';
        }
           
      };
      
      
      const validateCardExpiryDate = ({target}) =>{
        let date = target.value;
        const isValid = expiryDateFormatIsValid(date);
        date = date.split('/');
        
        if(isValid){
          const now = new Date();
          if('20' + date[1] > now.getFullYear()){
            flagIfInvalid(target,true);
            return true;
          }else{
            flagIfInvalid(target,false);
            return false;
          };
        };
      };
      
      
      const validateCardHolderName = ({target}) =>{
        const nameCheck = /^[a-zA]+[a-zA-Z]+$/;
        if(nameCheck.test(target)){
          flagIfInvalid(target, true);
          return true;
        }else{
          flagIfInvalid(target, false);
          return false;
        };
      };
      
      const validateCardNumber = () =>{};
      
      
      const uiCanInteract = () =>{
        document.querySelector('div[data-cc-digits]input:nth-child(1)').addEventListener('blur', detectCardType);
        document.querySelector('div[data-cc-info]input:nth-child(1)').addEventListener('blur', validateCardHolderName);
        document.querySelector('div[data-cc-info]input:nth-child(2)').addEventListener('blur', validateCardExpiryDate);
        document.querySelector('button[data-pay-btn]').addEventListener('click', validateCardNumber);
        document.querySelector('div[data-cc-digits]input:nth-child(1)').focus();
        
      };
      
      const displayCartTotal = ({results:results}) =>{
        const [data] = results;
        const {itemsInCart, buyerCountry} = data;
        
        appState.items = itemsInCart;
        appState.country = buyerCountry;
        
        appState.bill = itemsInCart.reduce((acc, item) => {
          return acc.qty * acc.price + item.qty * item.price;
        }, 0);
        appState.billFormatted = formatAsMoney(appState.bill, appState.country);
        document.querySelector('span[data-bill]').textContent = appState.billFormatted;
        uiCanInteract();
        
      };
      
      const fetchBill = () =>{
        const api = 'https://randomapi.com/api/006b08a801d82d0c9824dcfdfdfa3b3c';
           
      fetch(api)
      .then((response) => {return response.json();})
      .then((data) => {displayCartTotal(data);})
      .catch((err) => console.log(err));
      
      }; 
      
      
      
      const startApp = () => {
      	fetchBill();
      };

      startApp();
    </script>
  </body>
</html>
